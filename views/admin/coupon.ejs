<%- include("../../views/partials/admin/header") %>

<!-- Content -->
<div class="content">
  <div
    class="d-flex justify-content-between align-items-center mb-4"
    style="padding-top: 20px"
  >
    <h2>Coupons</h2>
    <div class="d-flex">
      <form action="/admin/coupon" method="get">
        <div class="input-group me-2" style="width: 300px">
          <input
            type="text"
            class="form-control"
            name="search"
            id="searchInput"
            placeholder="Search for Coupons"
            aria-label="Search"
          />
          <button class="btn btn-dark" type="submit">
            <i class="bi bi-search"></i>
          </button>
          <button
            class="btn btn-outline-secondary"
            type="button"
            onclick="clearSearch()"
          >
            <i class="bi bi-x-lg"></i>
          </button>
        </div>
      </form>
      <button
        class="btn btn-success"
        data-bs-toggle="modal"
        data-bs-target="#addCouponModal"
      >
        ADD COUPON <i class="bi bi-plus-lg"></i>
      </button>
    </div>
  </div>

  <div class="table-responsive">
    <table class="table table-dark">
      <thead>
        <tr>
          <th scope="col">Coupon code</th>
          <th scope="col">Min cart value</th>
          <th scope="col">Discount</th>
          <th scope="col">Start date</th>
          <th scope="col">End date</th>
          <th scope="col">Action</th>
        </tr>
      </thead>
      <tbody>
        <% coupon.forEach((item)=>{ %>
        <tr>
          <td><%= item.couponCode %></td>
          <td><%= item.minCartValue %></td>
          <td><%= item.discount %></td>
          <td><%= item.startDate.toISOString().substring(0, 10) %></td>
          <td><%= item.endDate.toISOString().substring(0, 10) %></td>
          <td>
            <div class="d-flex">
              <button
                class="btn-edit-coupon btn btn-secondary"
                data-id="<%= item._id %>"
                data-coupon-code="<%= item.couponCode %>"
                data-description="<%= item.description %>"
                data-mincartvalue="<%= item.minCartValue %>"
                data-discount="<%= item.discount %>"
                data-max-discount="<%= item.maxDiscount%>"
                data-start-date="<%= item.startDate.toISOString().substring(0, 10) %>"
                data-end-date="<%= item.endDate.toISOString().substring(0, 10) %>"
                data-bs-toggle="modal"
                data-bs-target="#editCouponModal"
              >
                EDIT
              </button>
              <% if(item.status==="Active"){ %>
              <button
                class="btn-disable-coupon btn btn-danger"
                data-id="<%= item._id %>"
              >
                Disable
              </button>
              <% }else{ %>
              <button
                class="btn-enable-coupon btn btn-success"
                data-id="<%= item._id %>"
              >
                Enable
              </button>
              <% } %>
            </div>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <div class="d-flex justify-content-between align-items-center mt-3">
    <nav aria-label="Page navigation">
      <ul class="pagination">
        <% for(i=1;i<=totalPages;i++){ %>
        <li class="page-item <%= i===currentPage ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
        </li>
        <% } %>
      </ul>
    </nav>
  </div>
</div>

<!-- Add Coupon Modal -->
<div
  class="modal fade"
  id="addCouponModal"
  tabindex="-1"
  aria-labelledby="addCouponModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="addCouponForm">
          <div class="mb-3">
            <label class="form-label">Coupon Code</label>
            <input
              type="text"
              class="form-control"
              name="couponCode"
              id="couponCode"
              placeholder="Enter coupon code"
            />
          </div>
          <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea
              type="text"
              class="form-control"
              name="description"
              id="description"
              placeholder="Enter description"
            ></textarea>
          </div>
          <div class="mb-3">
            <label for="minCartValue" class="form-label">Min Cart Value</label>
            <input
              type="number"
              class="form-control"
              name="minCartValue"
              id="minCartValue"
              placeholder="Enter minimum cart value "
            />
          </div>

          <div class="mb-3">
            <label for="discount" class="form-label">Discount</label>
            <input
              type="number"
              class="form-control"
              name="discount"
              id="discount"
              placeholder="Enter discount"
            />
          </div>

          <div class="mb-3">
            <label for="maxDiscount" class="form-label">Max Discount</label>
            <input
              type="number"
              class="form-control"
              name="maxDiscount"
              id="maxDiscount"
              placeholder="Enter max discount"
            />
          </div>

          <div class="mb-3">
            <label class="form-label">Start date</label>
            <input
              type="date"
              class="form-control"
              name="startDate"
              id="startDate"
            />
          </div>
          <div class="mb-3">
            <label class="form-label">End date</label>
            <input
              type="date"
              class="form-control"
              name="endDate"
              id="endDate"
            />
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <span id="msgSpace"></span>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <button type="submit" class="btn btn-primary" form="addCouponForm">
          Add Coupon
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Coupon Modal -->
<div
  class="modal fade"
  id="editCouponModal"
  tabindex="-1"
  aria-labelledby="addCouponModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Edit Coupon</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form id="editCouponForm">
          <div class="mb-3">
            <label class="form-label">Coupon Code</label>
            <input
              type="text"
              class="form-control"
              name="ecouponCode"
              id="ecouponCode"
              placeholder="Enter coupon code"
            />
          </div>
          <input type="hidden" id="ecouponId" />
          <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea
              type="text"
              class="form-control"
              name="edescription"
              id="edescription"
              placeholder="Enter description"
            ></textarea>
          </div>
          <div class="mb-3">
            <label for="minCartValue" class="form-label">Min Cart Value</label>
            <input
              type="number"
              class="form-control"
              name="eminCartValue"
              id="eminCartValue"
              placeholder="Enter minimum cart value "
            />
          </div>

          <div class="mb-3">
            <label for="maxDiscount" class="form-label">Discount</label>
            <input
              type="number"
              class="form-control"
              name="ediscount"
              id="ediscount"
              placeholder="Enter discount"
            />
          </div>

          <div class="mb-3">
            <label for="emaxDiscount" class="form-label">Max Discount</label>
            <input
              type="number"
              class="form-control"
              name="emaxDiscount"
              id="emaxDiscount"
              placeholder="Enter max discount"
            />
          </div>

          <div class="mb-3">
            <label class="form-label">Start date</label>
            <input
              type="date"
              class="form-control"
              name="estartDate"
              id="estartDate"
            />
          </div>
          <div class="mb-3">
            <label class="form-label">End date</label>
            <input
              type="date"
              class="form-control"
              name="eendDate"
              id="eendDate"
            />
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <span id="emsgSpace"></span>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <button type="submit" class="btn btn-primary" form="editCouponForm">
          Edit Coupon
        </button>
      </div>
    </div>
  </div>
</div>

<!-- script section -->
<script>
  // clear search
  function clearSearch() {
    const searchInput = document.getElementById("searchInput");
    searchInput.value = "";
    window.location.href = "/admin/coupon";
  }

  document.addEventListener("DOMContentLoaded", () => {
    document
      .getElementById("addCouponForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();

        const couponCode = document.getElementById("couponCode").value;
        const description = document.getElementById("description").value;
        const minCartValue = document.getElementById("minCartValue").value;
        const discount = document.getElementById("discount").value;
        const maxDiscount = document.getElementById("maxDiscount").value;
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;
        const msgSpace = document.getElementById("msgSpace");

        // validation

        if (
          !couponCode ||
          !description ||
          !minCartValue ||
          !discount ||
          !endDate ||
          !startDate ||
          !maxDiscount
        ) {
          msgSpace.style.display = "block";
          msgSpace.style.color = "red";
          msgSpace.innerHTML = "Fill required spaces";
          return false;
        }
        if (new Date(startDate) >= new Date(endDate)) {
          msgSpace.style.display = "block";
          msgSpace.style.color = "red";
          msgSpace.innerHTML = "End date must be after start date.";
          return false;
        }
        if (isNaN(minCartValue)) {
          msgSpace.style.display = "block";
          msgSpace.style.color = "red";
          msgSpace.innerHTML = "Please enter a valid min cart value.";
          return false;
        }
        if (isNaN(maxDiscount)) {
          msgSpace.style.display = "block";
          msgSpace.style.color = "red";
          msgSpace.innerHTML = "Please enter a valid max discount.";
          return false;
        }
        if (
          isNaN(discount) ||
          Number(discount) <= 0 ||
          Number(discount) > 100
        ) {
          msgSpace.style.display = "block";
          msgSpace.style.color = "red";
          msgSpace.innerHTML = "Please enter a valid discount.";
          return false;
        }

        // fetch for add coupon
        try {
          const result = await fetch("/admin/addCoupon", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              couponCode,
              description,
              minCartValue,
              startDate,
              endDate,
              discount,
              maxDiscount,
            }),
          });

          const response = await result.json();

          if (response.success) {
            Swal.fire({
              icon: "success",
              title: "Success",
              text: response.message || "Coupon added successfully",
              showConfirmButton: false,
              timer: 1500,
            }).then(() => location.reload());
          } else {
            Swal.fire({
              icon: "error",
              title: "Failed",
              text: response.message || "Failed to add coupon",
            });
          }
        } catch (error) {
          Swal.fire({
            icon: "error",
            title: "Failed",
            text: error.message || "something went wrong",
          });
        }
      });

    //  edit coupon
    document.querySelectorAll(".btn-edit-coupon").forEach((button) => {
      button.addEventListener("click", function () {
        document.getElementById("ecouponCode").value =
          this.dataset.couponCode || "";
        document.getElementById("ecouponId").value = this.dataset.id || "";
        document.getElementById("edescription").value =
          this.dataset.description || "";
        document.getElementById("estartDate").value =
          this.dataset.startDate || "";
        document.getElementById("eendDate").value = this.dataset.endDate || "";
        document.getElementById("ediscount").value =
          this.dataset.discount || "";
        document.getElementById("emaxDiscount").value =
          this.dataset.maxDiscount || "";
        document.getElementById("eminCartValue").value =
          this.dataset.mincartvalue || "";
      });
    });

    document
      .getElementById("editCouponForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();

        const ecouponCode = document.getElementById("ecouponCode").value;
        const edescription = document.getElementById("edescription").value;
        const eminCartValue = document.getElementById("eminCartValue").value;
        const ediscount = document.getElementById("ediscount").value;
        const emaxDiscount = document.getElementById("emaxDiscount").value;
        const estartDate = document.getElementById("estartDate").value;
        const eendDate = document.getElementById("eendDate").value;
        const ecouponId = document.getElementById("ecouponId").value;
        const emsgSpace = document.getElementById("emsgSpace");

        // validation

        if (
          !ecouponCode ||
          !edescription ||
          !eminCartValue ||
          !ediscount ||
          !eendDate ||
          !estartDate ||
          !emaxDiscount
        ) {
          emsgSpace.style.display = "block";
          emsgSpace.style.color = "red";
          emsgSpace.innerHTML = "Fill required spaces";
          return false;
        }
        if (new Date(estartDate) >= new Date(eendDate)) {
          emsgSpace.style.display = "block";
          emsgSpace.style.color = "red";
          emsgSpace.innerHTML = "End date must be after start date.";
          return false;
        }
        if (isNaN(eminCartValue)) {
          emsgSpace.style.display = "block";
          emsgSpace.style.color = "red";
          emsgSpace.innerHTML = "Please enter a valid min cart value.";
          return false;
        }
        if (isNaN(emaxDiscount)) {
          emsgSpace.style.display = "block";
          emsgSpace.style.color = "red";
          emsgSpace.innerHTML = "Please enter a valid max discount.";
          return false;
        }
        if (
          isNaN(ediscount) ||
          Number(ediscount) <= 0 ||
          Number(ediscount) > 100
        ) {
          emsgSpace.style.display = "block";
          emsgSpace.style.color = "red";
          emsgSpace.innerHTML = "Please enter a valid discount.";
          return false;
        }

        try {
          const result = await fetch("/admin/editCoupon", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              minCartValue: eminCartValue,
              couponCode: ecouponCode,
              description: edescription,
              startDate: estartDate,
              endDate: eendDate,
              discount: ediscount,
              maxDiscount: emaxDiscount,
              couponId: ecouponId,
            }),
          });

          const response = await result.json();

          if (response.success) {
            Swal.fire({
              icon: "success",
              title: "Success",
              text: response.message || "Coupon edited successfully",
              showConfirmButton: false,
              timer: 1500,
            }).then(() => location.reload());
          } else {
            Swal.fire({
              icon: "error",
              title: "Failed",
              text: response.message || "Failed to edit coupon",
            });
          }
        } catch (error) {
          Swal.fire({
            icon: "error",
            title: "Failed",
            text: error.message || "something went wrong",
          });
        }
      });

    // status updation of coupon
    // disable
    document.querySelectorAll(".btn-disable-coupon").forEach((button) => {
      button.addEventListener("click", async () => {
        const couponId = button.dataset.id;

        const cnfrm = await Swal.fire({
          title: "Are you sure?",
          text: "Do you want to disable this coupon?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, disable it!",
        });

        if (cnfrm.isConfirmed) {
          try {
            const result = await fetch("/admin/disableCoupon", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                couponId,
              }),
            });

            const data = await result.json();

            if (data.success) {
              Swal.fire({
                icon: "success",
                title: "Success",
                text: data.message || "Coupon disable successfully",
                showConfirmButton: false,
                timer: 1500,
              }).then(() => location.reload());
            } else {
              Swal.fire({
                icon: "error",
                title: "Failed",
                text: data.message || "Failed to disable Coupon",
              });
            }
          } catch (error) {
            Swal.fire({
              icon: "error",
              title: "Failed",
              text: error.message || "something went wrong",
            });
          }
        }
      });
    });

    // enable coupon

    document.querySelectorAll(".btn-enable-coupon").forEach((button) => {
      button.addEventListener("click", async () => {
        const couponId = button.dataset.id;

        const cnfrm = await Swal.fire({
          title: "Are you sure?",
          text: "Do you want to enable this coupon?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, disable it!",
        });

        if (cnfrm.isConfirmed) {
          try {
            const result = await fetch("/admin/enableCoupon", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                couponId,
              }),
            });

            const data = await result.json();

            if (data.success) {
              Swal.fire({
                icon: "success",
                title: "Success",
                text: data.message || "Coupon enable successfully",
                showConfirmButton: false,
                timer: 1500,
              }).then(() => location.reload());
            } else {
              Swal.fire({
                icon: "error",
                title: "Failed",
                text: data.message || "Failed to enable Coupon",
              });
            }
          } catch (error) {
            Swal.fire({
              icon: "error",
              title: "Failed",
              text: error.message || "something went wrong",
            });
          }
        }
      });
    });
  });
</script>
<%- include("../../views/partials/admin/footer") %>
