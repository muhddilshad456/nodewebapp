<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Order Details</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background-color: #f8f9fa;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      }
      .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      .card-header {
        background-color: #007bff;
        color: white;
        border-radius: 10px 10px 0 0;
        font-weight: 600;
      }
      .btn-primary {
        background-color: #28a745;
        border-color: #28a745;
      }
      .btn-primary:hover {
        background-color: #218838;
        border-color: #1e7e34;
      }
      .btn-verify {
        background-color: #ffc107;
        border-color: #ffc107;
      }
      .btn-verify:hover {
        background-color: #e0a800;
        border-color: #d39e00;
      }
      .table {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
      }
      .table th {
        background-color: #e9ecef;
        font-weight: 500;
      }
      h5 {
        color: #343a40;
        font-weight: 600;
      }
      .action-select {
        width: 150px;
      }
    </style>
  </head>
  <body>
    <div class="container my-5">
      <!-- Order Details Header -->
      <div class="card mb-4">
        <div class="card-header">
          <h2 class="mb-0">Order Details</h2>
        </div>
        <div class="card-body">
          <!-- Order ID, Date, and Status -->
          <div class="row mb-4">
            <div class="col-md-6">
              <p class="mb-1"><strong>Order ID:</strong><%= order.orderId %></p>
              <p class="mb-1">
                <strong>Order Date:</strong><%=
                order.createdOn.toISOString().slice(0, 10); %>
              </p>
            </div>
            <div class="col-md-6 text-md-end">
              <% if(order.status==="Cancelled"){ %>
                <button class="btn btn-secondary" disabled>Cancelled</button>
              <% }else if(order.status==="Returned"){ %>
                <button class="btn btn-secondary" disabled>Returned</button>
                <% }else{ %>
              <div class="d-inline-block">
                <select
                  class="form-select d-inline-block w-auto me-2"
                  id="selectStatus"
                  data-order-id="<%= order._id %>"
                  <%= (order.status === "Delivered" || order.status === "Return requisted") ? "disabled" : "" %>
                >
                  
                  <option value="Pending" <%= order.status==="Pending" ? "selected" : "" %>>PENDING</option>
                  <option value="Processing" <%= order.status==="Processing" ? "selected" : "" %>>PROCESSING</option>
                  <option value="Shipped" <%= order.status==="Shipped" ? "selected" : "" %>>SHIPPED</option>
                  <option value="Delivered" <%= (order.status === "Delivered" || order.status === "Return requisted") ? "selected" : "" %>>DELIVERED</option>
                </select>
                <button class="btn btn-primary" id="updateStatusBtn" <%= ( order.status === "Delivered" || order.status === "Return requisted") ? "disabled" : "" %>>
                  Update Status
                </button>
              </div>
              <% } %>
            </div>
          </div>

          <!-- Return Reason Verification -->
           <% if(order.status==="Return requisted"){ %>
          <div class="mb-4">
            <h5 class="mb-3">Return Reason</h5>
            <textarea
              class="form-control mb-3"
              id="returnReason"
              rows="3"
              readonly
            ><%= order.returnReason %></textarea>
            <button class="btn btn-verify" id="verifyReturnBtn">
              Verify Reason
            </button>
          </div>
          <% } %>

          <!-- Delivery Address and Payment Summary -->
          <div class="row mb-4">
            <div class="col-md-6">
              <h5 class="mb-3">Delivery Address</h5>
              <p class="mb-1">
                <%= order.address.name %>,<%= order.address.appartment %>,<%=
                order.address.streetAddress %>
              </p>
              <p class="mb-1">
                <%= order.address.postcode %>,<%= order.address.city %>
              </p>
            </div>
            <div class="col-md-6">
              <h5 class="mb-3">Payment Summary</h5>
              <p class="mb-1">
                <strong>Subtotal:</strong> ₹.<%= order.totalAmount %>
              </p>
              <p class="mb-1"><strong>Shipping:</strong> ₹.0.00</p>
              <p class="mb-1"><strong>Discount:</strong> ₹.0.00</p>
              <p class="mb-1">
                <strong>Total:</strong> ₹.<%= order.totalAmount %>
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Order Items with Action Dropdown -->
      <div class="card mb-4">
        <div class="card-body">
          <h5 class="mb-3">Order Items</h5>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Product</th>
                <th>Image</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Amount</th>
                <th>Status</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              <% order.orderedItems.forEach((item)=>{ %>
              <tr>
                <td><%= item.productId.productName %></td>
                <td><img src="<%= item.productId.productImage[0] %>" alt="" style="width: 80px; height: auto;"></td>
                <td><%= item.productId.productAmount %></td>
                <td><%= item.quantity %></td>
                <td><%= item.totalPrice %></td>
                <td>
                <!-- Status Button -->
                <button disabled class="btn btn-secondary mb-2">
                <%= item.status %>
                </button>

                <% if (item.status === "Return requisted") { %>
                <!-- Return Reason and Accept Button -->
                <div class="d-flex flex-column gap-2">
                <input
                type="text"
                class="form-control"
                value="<%= item.returnReason %>"
                disabled
                />
                <button data-item-id="<%= item._id %>" 
                  class="btn-accept-singleReturn btn btn-dark" >
                  Accept
                </button>
                </div>
                <% } %>
                </td>

                <td>
                  <select
                    class="form-select action-select"
                    id="actionSelect"
                    data-id="<%= item._id %>"
                    data-current="<%= item.status %>"
                    onchange="updateSingleItemStatus(this)"
                    <%= (item.status==="Returned" || item.status ==="Cancelled") ? "disabled" : "" %>
                  >
                    <option value="Delivered" <%= item.status==="Delivered" ? "selected" : "" %>>DELIVERED</option>
                    <option value="Pending" <%= item.status==="Pending" ? "selected" : "" %>>PENDING</option>
                    <option value="Processing" <%= item.status==="Processing" ? "selected" : "" %>>PROCESSING</option>
                    <option value="Shipped" <%= item.status==="Shipped" ? "selected" : "" %>>SHIPPED</option>
                  </select>
                  <% if(!(item.status==="Returned" || item.status ==="Cancelled")){ %>
                  <button class="btn btn-primary">Update</button>
                  <% } %>
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Payment Records -->
      <div class="card">
        <div class="card-body">
          <h5 class="mb-3">Payment Records</h5>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Date</th>
                <th>Amount</th>
                <th>Payment</th>
                <th>Tran.ID</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><%= order.createdOn.toISOString().slice(0, 10); %></td>
                <td>₹<%= order.totalAmount %></td>
                <td><%= order.paymentMethod %></td>
                <td>214343442</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      

        
        document.addEventListener("DOMContentLoaded",()=>{
          // updating status
          const select=document.getElementById("selectStatus")
          const button=document.getElementById("updateStatusBtn")
          const originalValue=select.value
          const orderId=select.dataset.orderId

          select.addEventListener("change",()=>{
            button.disabled=(select.value===originalValue)
          })

          button.addEventListener("click",async()=>{
            const newStatus=select.value

            try {
              const res=await fetch("/admin/orderStatus",{
                method:"POST",
                headers:{
                  "Content-Type":"application/json"
                },
                body:JSON.stringify({orderId,status:newStatus})
              })

              const response=await res.json()

              if(response.success){
                Swal.fire({
                icon: "success",
                title: "Success!",
                showConfirmButton:false,
                timer:1500,
                text: response.message || "Status updated successfully!"
                }).then(()=>location.reload())

                if(newStatus==="Delivered"){
                  select.disabled=true
                  button.disabled=true
                }else{
                  button.disabled=true
                }
              }else{
                Swal.fire({
              icon: "error",
              title: "Update Failed",
              text: response.message || "Failed to update status."
             });
              }
            } catch (error) {
              console.error(error);
              Swal.fire({
              icon: "error",
              title: "Error",
              text: "Something went wrong while updating the status."
              });
            }
          })

          // accept return 
          const verifyBtn=document.getElementById("verifyReturnBtn")

          if(verifyBtn){
            verifyBtn.addEventListener("click",async()=>{
              const confirm=await Swal.fire({
               title: "Are you sure?",
               text: "Do you want to mark this order as Returned?",
               icon: "warning",
               showCancelButton: true,
               confirmButtonColor: "#28a745",
               cancelButtonColor: "#d33",
               confirmButtonText: "Yes, confirm"
              })

              if(confirm.isConfirmed){
                try {
                  const res=await fetch("/admin/confirmReturn",{
                    method:"POST",
                    headers:{
                      "Content-Type":"application/json"
                    },
                    body:JSON.stringify({orderId:"<%= order._id%>"})
                  })

                  const result=await res.json()

                  if(result.success){
                    Swal.fire({
                     icon: "success",
                     title: "Updated!",
                     text: result.message || "Order marked as Returned.",
                     timer: 1500,
                     showConfirmButton: false
                    }).then(()=>window.location.reload())
                  }else{
                    Swal.fire({
                      icon: "error",
                      title: "Failed",
                      text: result.message || "Could not update order status."
                    })
                  }
                } catch (error) {
                  console.error(error);
                   Swal.fire({
                     icon: "error",
                     title: "Error",
                     text: "Something went wrong."
                  });
                }
              }
            })
          }

          // accept single return 

          document.querySelectorAll(".btn-accept-singleReturn").forEach(button=>{
            button.addEventListener("click",async function(e){
              e.preventDefault()
              const itemId=this.getAttribute("data-item-id")
              const orderId="<%= order._id %>"

              fetch("/admin/acceptSingleItemReturn",{
                method:"POST",
                headers:{
                  "Content-Type":"application/json"
                },
                body:JSON.stringify({itemId,orderId})
              }).then(response=>response.json())
              .then((data)=>{
                if(data.success){
                  Swal.fire({
                    icon:"success",
                    title:"Success",
                    text:data.message|| "Return item successfull",
                    showConfirmButton:false,
                    timer:1500
                  }).then(()=>location.reload())
                }else{
                  Swal.fire({
                    icon:"error",
                    title:"failed",
                    text:data.message|| "Failed to return item",
                  })
                }
              }).catch((error)=>{
                  Swal.fire({
                    icon:"error",
                    title:"failed",
                    text:error.message|| "something went wrong",
                  })
              })
            })
          })
        })
        
        //update single item status

        async function updateSingleItemStatus(selectItem){
          const itemId=selectItem.dataset.id
          const current=selectItem.dataset.current
          const newStatus=selectItem.value
          const orderId="<%= order._id %>"

          const confirmed = await Swal.fire({
          title: 'Are you sure?',
          text: `Change status to "${newStatus}"?`,
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Yes, update it',
          cancelButtonText: 'Cancel'
         });

         if(!confirmed.isConfirmed){
          selectItem.value=selectItem.dataset.current
          return
         }

         fetch("/updateSingleItemStatus",{
          method:"POST",
          headers:{
            "Content-Type":"application/json"
          },
          body:JSON.stringify({itemId,newStatus,orderId})
         }).then(response=>response.json())
         .then((data)=>{
          if(data.success){
            Swal.fire({
              icon:"success",
              title:"Success",
              text:data.message || "Status updated successfully",
              showConfirmButton:false,
              timer:1500
            }).then(()=>location.reload())
          }else{
            Swal.fire({
              icon:"error",
              title:"Failed",
              text:data.message || "Failed to update status",
            })
            selectItem.value = selectItem.dataset.current;
          }
         }).catch((error)=>{
           Swal.fire({
              icon:"error",
              title:"Failed",
              text:error.message || "Something went wrong",
            })
            selectItem.value = selectItem.dataset.current;
         })
        }

    </script>
  </body>
</html>
